<?php

namespace Tests\Unit;

use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use App\Models\{{ modelName }};
use App\Http\Controllers\Admin\{{ controllerName }};

class {{ controllerName }}AdminTest extends TestCase
{
    use RefreshDatabase;

    protected string $tableName;

    public function setUp(): void
    {
        parent::setUp();
        $this->tableName = (new {{ modelName }})->getTable();
    }

    /** @test */
    public function it_can_list_all_{{ modelName|snake }}()
    {
        {{ modelName }}::factory()->count(3)->create();

        $response = $this->get('/admin/{{ routeName }}');

        $response->assertStatus(200);
    }

    /** @test */
    public function it_can_show_a_{{ modelName|snake }}()
    {
        $item = {{ modelName }}::factory()->create();

        $response = $this->get('/admin/{{ routeName }}/' . $item->id);

        $response->assertStatus(200);
        $response->assertViewHas('{{ modelName|snake }}');
    }

    /** @test */
    public function it_can_create_a_{{ modelName|snake }}()
    {
        $data = [
            {{ fields }}
        ];

        $response = $this->post('/admin/{{ routeName }}', $data);

        $response->assertStatus(302);
        $this->assertDatabaseHas($this->tableName, $data);
    }

    /** @test */
    public function it_can_update_a_{{ modelName|snake }}()
    {
        $item = {{ modelName }}::factory()->create();
        $data = [
            {{ fields }}
        ];

        $response = $this->put('/admin/{{ routeName }}/' . $item->id, $data);

        $response->assertStatus(302);
        $this->assertDatabaseHas($this->tableName, $data);
    }

    /** @test */
    public function it_can_delete_a_{{ modelName|snake }}()
    {
        $item = {{ modelName }}::factory()->create();

        $response = $this->delete('/admin/{{ routeName }}/' . $item->id);

        $response->assertStatus(302);
        $this->assertDatabaseMissing($this->tableName, ['id' => $item->id]);
    }
}
